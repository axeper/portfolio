## Association rules

Discovered rule: X -> Y, if X is observe then Y is observed too.
- Which products tend to be purchased together?
- Of those customers who are similar to this person, what products do they tend to buy?
- Of those customers who have purchased this product, what other similar products do they tend to view or purchase?

The Apriori algorithm takes a bottom-up iterative approach to uncovering the frequent itemsets by first determining all the possible items (or 1-itemsets) and then identifying which among them are frequent.

Four main measures:
1. Support: # occurences / total
  - Frequency of occurences
2. Confidence: Support(X and Y) / Support(X)
  - Certainty associated with each discovered rules
3. Lift(X -> Y): support(X and Y) / (support(X) * support(y))
  - A lift value greater than 1 means that item Y is likely to be bought if item X is bought, while a value less than 1 means that item Y is unlikely to be bought if item X is bought. 1 is statistically independant
  - Lift measures how many times more often X and Y occur together than expected if they are statistically independent of each other. Lift is a measure [6] of how X and Y are really related rather than coincidentally happening together
4. Leverage(X -> Y): support(X and Y) - support(X) * support(Y)
  - Leverage is 0 when X and Y are statistically independent of each other. If X and Y have some kind of relationship, the leverage would be greater than zero. A larger leverage value indicates a stronger relationship between X and Y. 
5. Other alternative measures exist, such as correlation[8], collective strength [9], conviction [6], and coverage [10].

```{r}
library('arules')
library('arulesViz')
data(Groceries)
itemsets <- apriori(Groceries, parameter=list(minlen=1, maxlen=1, support=0.02, target="frequent itemsets"))
inspect(head(sort(itemsets, by = "support"), 10))
itemsets <- apriori(Groceries, parameter=list(minlen=2, maxlen=2, support=0.02, target="frequent itemsets"))
inspect(head(sort(itemsets, by ="support"),10))

# When the maxlen parameter is not set, the algorithm continues each iteration until it runs out of support or until k reaches the default maxlen=10.
itemsets <- apriori(Groceries, parameter=list(minlen=1, support=0.02, target="frequent itemsets"))

# Visualize rules
rules <- apriori(Groceries, parameter=list(support=0.001, confidence=0.6, target = "rules"))
plot(rules@quality)
```